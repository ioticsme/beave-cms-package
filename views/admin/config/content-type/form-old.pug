extends ../../layouts/master.pug

block csslib
	link(href='/cms-static/admin/assets/plugins/custom/datatables/datatables.bundle.css' rel='stylesheet' type='text/css')

block jslib
	// begin::Vendors Javascript(used by this page)
	script(src='/cms-static/admin/assets/plugins/custom/datatables/datatables.bundle.js')
	// end::Vendors Javascript
	// begin::Custom Javascript(used by this page)
	//- script(src='/cms-static/admin/assets/js/custom/apps/subscriptions/add/advanced.js')
	//- script(src='/cms-static/admin/assets/js/custom/apps/subscriptions/add/customer-select.js')
	//- script(src='/cms-static/admin/assets/js/custom/apps/subscriptions/add/products.js')
	script(src='/cms-static/admin/assets/js/widgets.bundle.js')
	script(src='/cms-static/admin/assets/js/custom/widgets.js')
	script(src='/cms-static/admin/assets/js/custom/apps/chat/chat.js')
	script(src='/cms-static/admin/assets/js/custom/utilities/modals/upgrade-plan.js')
	script(src='/cms-static/admin/assets/js/custom/utilities/modals/create-app.js')
	script(src='/cms-static/admin/assets/js/custom/utilities/modals/offer-a-deal/type.js')
	script(src='/cms-static/admin/assets/js/custom/utilities/modals/offer-a-deal/details.js')
	script(src='/cms-static/admin/assets/js/custom/utilities/modals/offer-a-deal/finance.js')
	script(src='/cms-static/admin/assets/js/custom/utilities/modals/offer-a-deal/complete.js')
	script(src='/cms-static/admin/assets/js/custom/utilities/modals/offer-a-deal/main.js')
	// end::Custom Javascript

	script(src='/cms-static/common/js/form-data-json.min.js')
	script(src='/cms-static/common/js/es-form.js')

block customScript
	script.
		var childIndex = 0
		function cloneChild() {
			childIndex++
			let p = document.querySelector(".cf-card")
			let p_prime = p.cloneNode(true)
			let newElement = document
				.getElementById('form-holder')
				.appendChild(p_prime)
			newElement.setAttribute("id", "cf-card-" + childIndex) //setting ID for newly created card
			//- document.querySelector(`#cf-card-${childIndex} .title`).textContent = `Custom Field ${childIndex + 1}`
			document
				.querySelectorAll(`#cf-card-${childIndex} .form-control`)
				.forEach(function (element) {
					element.value = null
				})
		}
		function removeFunction(event) {
			let parentId = event.target.parentElement.parentElement.id
			Swal.fire({
				text: 'Are you sure you want to delete ?',
				icon: 'warning',
				showCancelButton: !0,
				buttonsStyling: !1,
				confirmButtonText: 'Yes, delete!',
				cancelButtonText: 'No, cancel',
				customClass: {
					confirmButton: 'btn fw-bold btn-danger',
					cancelButton: 'btn fw-bold btn-active-light-primary',
				},
			}).then((e) => {
				if (e.value) {
					if( parentId=='cf-card-0'){
						Swal.fire({
							text: "This is the last element! Can't delete",
							icon: "warning",
							buttonsStyling: false,
							confirmButtonText: "Ok, got it!",
							customClass: {
								confirmButton: "btn btn-primary"
							}
						})
					}else{
						const parentElement = document.getElementById('form-holder')
						const childElement = document.getElementById(parentId)
						parentElement.removeChild(childElement)
					}
				}
			})
		}
		function removeFunctionForEdit(event) {
			let parentId = event.target.parentElement.parentElement.id
			Swal.fire({
				text: 'Are you sure you want to delete ?',
				icon: 'warning',
				showCancelButton: !0,
				buttonsStyling: !1,
				confirmButtonText: 'Yes, delete!',
				cancelButtonText: 'No, cancel',
				customClass: {
					confirmButton: 'btn fw-bold btn-danger',
					cancelButton: 'btn fw-bold btn-active-light-primary',
				},
			}).then((e) => {
				if (e.value) {
					const parentElement = document.getElementById('form-holder-edit')
					const childElement = document.getElementById(parentId)
					parentElement.removeChild(childElement)
				}
			})
		}
		function removeFunctionForGroupEdit(event) {
			let parentId = event.target.parentElement.parentElement.id
			Swal.fire({
				text: 'Are you sure you want to delete ?',
				icon: 'warning',
				showCancelButton: !0,
				buttonsStyling: !1,
				confirmButtonText: 'Yes, delete!',
				cancelButtonText: 'No, cancel',
				customClass: {
					confirmButton: 'btn fw-bold btn-danger',
					cancelButton: 'btn fw-bold btn-active-light-primary',
				},
			}).then((e) => {
				if (e.value) {
					const parentElement = document.getElementById('form-holder-group-edit')
					const childElement = document.getElementById(parentId)
					parentElement.removeChild(childElement)
				}
			})
		}
block content
	.d-flex.flex-column.flex-column-fluid
		#kt_app_toolbar.app-toolbar.py-3.py-lg-6
			#kt_app_toolbar_container.app-container.container-xxl.d-flex.flex-stack
				.page-title.d-flex.flex-column.justify-content-center.flex-wrap.me-3
					h1.page-heading.d-flex.text-dark.fw-bold.fs-3.flex-column.justify-content-center.my-0
						| #{contentType ? 'Edit' : 'Add'} Content Type
					ul.breadcrumb.breadcrumb-separatorless.fw-semibold.fs-7.my-0.pt-1
						li.breadcrumb-item.text-muted
							a.text-muted.text-hover-primary(href='/admin/dashboard') Dashboard
						li.breadcrumb-item
							span.bullet.bg-gray-400.w-5px.h-2px
						li.breadcrumb-item.text-muted Content Type 
							span.bullet.bg-gray-400.w-5px.h-2px.ms-1
						li.breadcrumb-item.text-muted #{contentType ? 'Edit' : 'New'}
		#kt_app_content.app-content.flex-column-fluid
			#kt_app_content_container.app-container.container-xxl
				.card.mb-5.mb-xl-10
					.card-header.border-0.cursor-pointer(role='button' data-bs-toggle='collapse' data-bs-target='#kt_account_profile_details' aria-expanded='true' aria-controls='kt_account_profile_details')
						.card-title.m-0
							h3.fw-bold.m-0 Content Type Form
					#kt_account_settings_profile_details.collapse.show
						form#kt_account_profile_details_form.form.es-form(action=`/admin/config/content-type/save` data-redirect-url=`/admin/config/content-type`  method='post' autocomplete="off")
							input(type='hidden' name='id' value=`${contentType ? contentType._id : ''}`)
							.card-body.border-top.p-9
								.row.mb-6
									label.col-lg-4.col-form-label.required.fw-semibold.fs-6 Title
									.col-lg-8
										.row
											.col-lg-12.fv-row
												input.form-control.form-control-lg.form-control-solid.mb-3.mb-lg-0(type='text' name='title' placeholder='Title' value=`${contentType ? contentType.title : ''}`)
												.fv-plugins-message-container.invalid-feedback(id=`field-error-title`)
								.row.mb-6
									label.col-lg-4.col-form-label.required.fw-semibold.fs-6 URL
									.col-lg-8.fv-row
										input.form-control.form-control-lg.form-control-solid(type='text' name='slug' placeholder='URL' value=`${contentType ? contentType.slug : ''}`)
										.fv-plugins-message-container.invalid-feedback(id=`field-error-slug`)
								//- .row.mb-6
								//- 	label.col-lg-4.col-form-label.required.fw-semibold.fs-6 Template Name
								//- 	.col-lg-8.fv-row
								//- 		input.form-control.form-control-lg.form-control-solid(type='text' name='template_name' placeholder='Template Name' value=`${contentType ? contentType.template_name : ''}`)
								//- 		.fv-plugins-message-container.invalid-feedback(id=`field-error-template_name`)
								.row.mb-6
									label.col-lg-4.col-form-label.required.fw-semibold.fs-6 Position
									.col-lg-8.fv-row
										input.form-control.form-control-lg.form-control-solid(type='number' name='position' placeholder='Position' value=`${contentType ? contentType.position : 0}`)
										.fv-plugins-message-container.invalid-feedback(id=`field-error-position`)
								.row.mb-6
									label.col-lg-4.col-form-label.required.fw-semibold.fs-6 Admin Icon (SVG Code)
										br
										a(href='https://preview.keenthemes.com/html/metronic/docs/icons/duotune' target='_blank')
											small Sample Icons
									.col-lg-8.fv-row
										textarea.form-control.form-control-lg.form-control-solid(type='text' name='admin_icon' placeholder='Admin Icon' ) #{contentType ? contentType.admin_icon : ''}
										.fv-plugins-message-container.invalid-feedback(id=`field-error-admin_icon`)
								.row.mb-6
									label.col-lg-4.col-form-label.required.fw-semibold.fs-6 Attachable type
									.col-lg-8.fv-row
										select.form-select.form-select-lg.form-select-solid(data-control='select2' data-close-on-select='false' name='attachable_type' data-placeholder='Select a type' data-allow-clear='true' multiple='multiple')
											each ct in contentTypes
												option(value=`${ct.slug}` selected=contentType && contentType.allowed_type && contentType.allowed_type.length && contentType.allowed_type.find((at)=>at==ct.slug) ) #{ct.title}
										.fv-plugins-message-container.invalid-feedback(id=`field-error-attachable_type`)
								.row.mb-6#form-holder-edit
									span.col-lg-4.col-form-label.required.fw-semibold.fs-6 Custom Fields
									if isEdit
										if(contentType && contentType.custom_fields && contentType.custom_fields.length)
											each cf,i in contentType.custom_fields
												.col-lg-12.fv-row.cf-card-edit.row(id=`cf-card-edit-${i}`)
													.row.justify-content-center
														h5.text-center Custom Field
													.col-md-6
														input.form-control.form-control-lg.form-control-solid(type='text' name='repeater_group_label[]' placeholder='Repeater group Label' value=`${cf.repeater_group_label || ''}`)
														.fv-plugins-message-container.invalid-feedback(id=`field-error-repeater_group_label[]`)
													.col-md-6
														input.form-control.form-control-lg.form-control-solid(type='text' name='repeater_group_name[]' placeholder='Repeater group Name' value=`${cf.repeater_group_name || ''}`)
														.fv-plugins-message-container.invalid-feedback(id=`field-error-repeater_group_name[]`)
													.col-md-6
														input.form-control.form-control-lg.form-control-solid(type='text' name='field_label[]' placeholder='Field Label' value=`${cf.field_label || ''}`)
														.fv-plugins-message-container.invalid-feedback(id=`field-error-field_label[]`)
													.col-md-6
														input.form-control.form-control-lg.form-control-solid(type='text' name='field_name[]' placeholder='Field Name' value=`${cf.field_name || ''}`)
														.fv-plugins-message-container.invalid-feedback(id=`field-error-field_name[]`)
													.mt-2.col-md-6
														input.form-control.form-control-lg.form-control-solid(type='text' name='placeholder[]' placeholder='Placeholder' value=`${cf.placeholder || ''}`)
														.fv-plugins-message-container.invalid-feedback(id=`field-error-placeholder[]`)
													.mt-2.col-md-6
														input.form-control.form-control-lg.form-control-solid(type='text' name='validation[]' placeholder='Validation' value=`${cf.validation || ''}`)
														.fv-plugins-message-container.invalid-feedback(id=`field-error-validation[]`)
													.mt-2.col-md-6
														select.form-select.form-select-lg.form-select-solid.mb-2(name="bilingual[]"  data-control='select2' data-close-on-select='true' data-allow-clear="true" data-placeholder='Select language type' )
															//- TODO::edit selection list item
															option(value="" ) Select language type
															option(value="true" selected=cf && cf.bilingual == true) Bilingual
															option(value="false" selected=cf && cf.bilingual == false) English Only
													.mt-2.col-md-6
														select.form-select.form-select-lg.form-select-solid.mb-2(name="field_type[]"  data-control='select2' data-close-on-select='true' data-allow-clear="true" data-placeholder='Select field type' )
															option(value='') Select Field Type
															option(value='text' selected=cf.field_type=='text') Text
															option(value='wysiwig' selected=cf.field_type=='wysiwig') WYSIWYG
															option(value='textarea' selected=cf.field_type=='textarea') Textarea
															option(value='date' selected=cf.field_type=='date') Date
															option(value='dropdown' selected=cf.field_type=='dropdown') Dropdown
															option(value='radio' selected=cf.field_type=='radio') Radio
															option(value='checkbox' selected=cf.field_type=='checkbox') Checkbox
															option(value='file' selected=cf.field_type=='file') File
													-var optionLabels = cf.options?.map((op)=>op.label)
													-var optionValues = cf.options?.map((op)=>op.value)
													.mt-2.col-md-6
														textarea.form-control.form-control-lg.form-control-solid(type='text' name='option_label[]' placeholder='Dropdown option label seperated by comma(,)' ) #{optionLabels}
														.fv-plugins-message-container.invalid-feedback(id=`field-error-option_label[]`)
													.mt-2.col-md-6
														textarea.form-control.form-control-lg.form-control-solid(type='text' name='option_value[]' placeholder='Dropdown option value seperated by comma(,)' ) #{optionValues}
														.fv-plugins-message-container.invalid-feedback(id=`field-error-option_value[]`)
													.mt-5.mb-3.d-flex.justify-content-center
														.btn.btn-danger(onClick='removeFunctionForEdit(event)') Delete
								.row.mb-6#form-holder-group-edit
									span.col-lg-4.col-form-label.required.fw-semibold.fs-6 Custom Fields
									if isEdit
										if(contentType && contentType.repeater_groups && contentType.repeater_groups.length)
											each rg,i in contentType.repeater_groups
												each cf,j in rg.fields
													.col-lg-12.fv-row.cf-card-group-edit.row(id=`cf-card-group-edit-${cf._id}`)
														.row.justify-content-center
															h5.text-center Custom Field
														.col-md-6
															input.form-control.form-control-lg.form-control-solid(type='text' name='repeater_group_label[]' placeholder='Repeater group Label' value=`${rg.label || ''}`)
															.fv-plugins-message-container.invalid-feedback(id=`field-error-repeater_group_label[]`)
														.col-md-6
															input.form-control.form-control-lg.form-control-solid(type='text' name='repeater_group_name[]' placeholder='Repeater group Name' value=`${rg.name || ''}`)
															.fv-plugins-message-container.invalid-feedback(id=`field-error-repeater_group_name[]`)
														.col-md-6
															input.form-control.form-control-lg.form-control-solid(type='text' name='field_label[]' placeholder='Field Label' value=`${cf.field_label || ''}`)
															.fv-plugins-message-container.invalid-feedback(id=`field-error-field_label[]`)
														.col-md-6
															input.form-control.form-control-lg.form-control-solid(type='text' name='field_name[]' placeholder='Field Name' value=`${cf.field_name || ''}`)
															.fv-plugins-message-container.invalid-feedback(id=`field-error-field_name[]`)
														.mt-2.col-md-6
															input.form-control.form-control-lg.form-control-solid(type='text' name='placeholder[]' placeholder='Placeholder' value=`${cf.placeholder || ''}`)
															.fv-plugins-message-container.invalid-feedback(id=`field-error-placeholder[]`)
														.mt-2.col-md-6
															input.form-control.form-control-lg.form-control-solid(type='text' name='validation[]' placeholder='Validation' value=`${cf.validation || ''}`)
															.fv-plugins-message-container.invalid-feedback(id=`field-error-validation[]`)
														.mt-2.col-md-6
															select.form-select.form-select-lg.form-select-solid.mb-2(name="bilingual[]"  data-control='select2' data-close-on-select='true' data-allow-clear="true" data-placeholder='Select language type' )
																//- TODO::edit selection list item
																option(value="" ) Select language type
																option(value="true" selected=cf && cf.bilingual == true) Bilingual
																option(value="false" selected=cf && cf.bilingual == false) English Only
														.mt-2.col-md-6
															select.form-select.form-select-lg.form-select-solid.mb-2(name="field_type[]"  data-control='select2' data-close-on-select='true' data-allow-clear="true" data-placeholder='Select field type' )
																option(value='') Select Field Type
																option(value='text' selected=cf.field_type=='text') Text
																option(value='wysiwig' selected=cf.field_type=='wysiwig') WYSIWYG
																option(value='textarea' selected=cf.field_type=='textarea') Textarea
																option(value='date' selected=cf.field_type=='date') Date
																option(value='dropdown' selected=cf.field_type=='dropdown') Dropdown
																option(value='radio' selected=cf.field_type=='radio') Radio
																option(value='checkbox' selected=cf.field_type=='checkbox') Checkbox
																option(value='file' selected=cf.field_type=='file') File
														-var optionLabels = cf.options?.map((op)=>op.label)
														-var optionValues = cf.options?.map((op)=>op.value)
														.mt-2.col-md-6
															textarea.form-control.form-control-lg.form-control-solid(type='text' name='option_label[]' placeholder='Dropdown option label seperated by comma(,)' ) #{optionLabels}
															.fv-plugins-message-container.invalid-feedback(id=`field-error-option_label[]`)
														.mt-2.col-md-6
															textarea.form-control.form-control-lg.form-control-solid(type='text' name='option_value[]' placeholder='Dropdown option value seperated by comma(,)' ) #{optionValues}
															.fv-plugins-message-container.invalid-feedback(id=`field-error-option_value[]`)
														.mt-5.mb-3.d-flex.justify-content-center
															.btn.btn-danger(onClick='removeFunctionForGroupEdit(event)') Delete
								.row.mb-6#form-holder
									.col-lg-12.fv-row.cf-card.row.mt-3#cf-card-0
										h5.text-center Custom Field
										.mt-2.col-md-6
											input.form-control.form-control-lg.form-control-solid(type='text' name='repeater_group_label[]' placeholder='Repeater Group Label' )
											.fv-plugins-message-container.invalid-feedback(id=`field-error-repeater_group_label[]`)
										.mt-2.col-md-6
											input.form-control.form-control-lg.form-control-solid(type='text' name='repeater_group_name[]' placeholder='Repeater Group Name' )
											.fv-plugins-message-container.invalid-feedback(id=`field-error-repeater_group_name[]`)
										.mt-2.col-md-6
											input.form-control.form-control-lg.form-control-solid(type='text' name='field_label[]' placeholder='Field Label' )
											.fv-plugins-message-container.invalid-feedback(id=`field-error-field_label[]`)
										.mt-2.col-md-6
											input.form-control.form-control-lg.form-control-solid(type='text' name='field_name[]' placeholder='Field Name' )
											.fv-plugins-message-container.invalid-feedback(id=`field-error-field_name[]`)
										.mt-2.col-md-6
											input.form-control.form-control-lg.form-control-solid(type='text' name='placeholder[]' placeholder='Placeholder' )
											.fv-plugins-message-container.invalid-feedback(id=`field-error-placeholder[]`)
										.mt-2.col-md-6
											input.form-control.form-control-lg.form-control-solid(type='text' name='validation[]' placeholder='Validation' )
											.fv-plugins-message-container.invalid-feedback(id=`field-error-validation[]`)
										.mt-2.col-md-6
											//- select.form-select.form-control.select2.form-select-lg.form-select-solid.mb-2(name="bilingual[]"  data-control='select2' data-close-on-select='true' data-allow-clear="true" data-placeholder='Select language type' )
											select.form-select.form-control.select2.form-select-lg.form-select-solid.mb-2(name="bilingual[]"  placeholder='Select language type' )
												//- TODO::edit selection list item
												option(value="" ) Select language type
												option(value="true" selected=contentType && contentType.bilingual == true) Bilingual
												option(value="false" selected=contentType && contentType.bilingual == false) English Only
										.mt-2.col-md-6
											//- select.form-select.form-control.select2.form-select-lg.form-select-solid.mb-2(name="field_type[]"  data-control='select2' data-close-on-select='true' data-allow-clear="true" data-placeholder='Select field type' )
											select.form-select.form-control.select2.form-select-lg.form-select-solid.mb-2(name="field_type[]"  placeholder='Select field type' )
												//- TODO::edit selection list item
												option(value='') Select Field Type
												option(value='text' ) Text
												option(value='wysiwig' ) WYSIWYG
												option(value='textarea' ) Textarea
												option(value='date' ) Date
												option(value='dropdown' ) Dropdown
												option(value='radio' ) Radio
												option(value='checkbox' ) Checkbox
												option(value='file' ) File
										.mt-2.col-md-6
											textarea.form-control.form-control-lg.form-control-solid(type='text' name='option_label[]' placeholder='Dropdown option label seperated by comma(,)' )
											.fv-plugins-message-container.invalid-feedback(id=`field-error-option_label[]`)
										.mt-2.col-md-6
											textarea.form-control.form-control-lg.form-control-solid(type='text' name='option_value[]' placeholder='Dropdown option value seperated by comma(,)' )
											.fv-plugins-message-container.invalid-feedback(id=`field-error-option_value[]`)
										.mt-5.mb-3.d-flex.justify-content-center#btn-remove-child
											.btn.btn-danger(onClick='removeFunction(event)') Delete
								.mt-3.text-center
									.btn.btn-primary(onClick='cloneChild()') 
										span Add more
								.row.mb-6
									span.col-lg-4.col-form-label.required.fw-semibold.fs-6 Features Checklist
									small Please include the following in your content type.
									.row.mt-3
										.form-check.form-check-custom.form-check-solid.form-check-sm.col-md-4.mt-4
											input#in_use.form-check-input(type='checkbox' value='true' name='in_use' checked=(contentType ? contentType.in_use : false))
											label.form-check-label(for='in_use') In Use
										.form-check.form-check-custom.form-check-solid.form-check-sm.col-md-4.mt-4
											input#has_banner.form-check-input(type='checkbox' value='true' name='has_banner' checked=(contentType ? contentType.has_banner : false))
											label.form-check-label(for='has_banner') Has Banner
										.form-check.form-check-custom.form-check-solid.form-check-sm.col-md-4.mt-4
											input#has_gallery.form-check-input(type='checkbox' value='true' name='has_gallery' checked=(contentType ? contentType.has_gallery : false))
											label.form-check-label(for='has_gallery') Has Gallery
										.form-check.form-check-custom.form-check-solid.form-check-sm.col-md-4.mt-4
											input#has_form.form-check-input(type='checkbox' value='true' name='has_form' checked=(contentType ? contentType.has_form : false))
											label.form-check-label(for='has_form') Has Form
										.form-check.form-check-custom.form-check-solid.form-check-sm.col-md-4.mt-4
											input#has_api_endpoint.form-check-input(type='checkbox' value='true' name='has_api_endpoint' checked=(contentType ? contentType.has_api_endpoint : false))
											label.form-check-label(for='has_api_endpoint') Has API Endpoint
										.form-check.form-check-custom.form-check-solid.form-check-sm.col-md-4.mt-4
											input#hide_title.form-check-input(type='checkbox' value='true' name='hide_title' checked=(contentType ? contentType.hide_title : false))
											label.form-check-label(for='hide_title') Hide Title
										.form-check.form-check-custom.form-check-solid.form-check-sm.col-md-4.mt-4
											input#hide_body.form-check-input(type='checkbox' value='true' name='hide_body' checked=(contentType ? contentType.hide_body : false))
											label.form-check-label(for='hide_body') Hide Body
										.form-check.form-check-custom.form-check-solid.form-check-sm.col-md-4.mt-4
											input#hide_excerpt.form-check-input(type='checkbox' value='true' name='hide_excerpt' checked=(contentType ? contentType.hide_excerpt : false))
											label.form-check-label(for='hide_excerpt') Hide Excerpt
										.form-check.form-check-custom.form-check-solid.form-check-sm.col-md-4.mt-4
											input#hide_meta.form-check-input(type='checkbox' value='true' name='hide_meta' checked=(contentType ? contentType.hide_meta : false))
											label.form-check-label(for='hide_meta') Hide Meta

							.card-footer.d-flex.justify-content-end.py-6.px-9
								button#kt_account_profile_details_submit.btn.btn-primary.form-submit-btn(type='submit') 
									span.preloader.d-none
										| Saving...
									span.label
										| Save